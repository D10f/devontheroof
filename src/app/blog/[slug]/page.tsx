import {
    generatePageMetadata,
    getPostData,
    getPostSlugs,
} from "@/lib/asciidoc/posts";
import ImageConverter from "@/lib/asciidoc/converters/ImageConverter";
import PreambleConverter from "@/lib/asciidoc/converters/PreambleConverter";
import CodeBlockConverter from "@/lib/asciidoc/converters/CodeBlockConverter";
import { AbstractNode } from "asciidoctor";
import { CustomConverter } from "@/lib/asciidoc/converters/BaseConverter";
import { getHighlighter } from "shiki";
import ColistConverter from "@/lib/asciidoc/converters/ColistConverter";

export let metadata = {};

// throws a 404 error if the dynamic route was not generated by Next.js
export const dynamicParams = false;

export function generateStaticParams() {
    return getPostSlugs();
}

const themes = [
    "catppuccin-latte",
    "catppuccin-frappe",
    "catppuccin-macchiato",
    "catppuccin-mocha",
    "github-dark",
    "github-light",
];

const langs = [
    "javascript",
    "typescript",
    "console",
    "shell",
    "bash",
    "php",
    "python",
];

export default async function PostPage({ params }: any) {
    const post = getPostData(params.slug + ".adoc", [
        new ImageConverter(),
        new PreambleConverter(),
        new CodeBlockConverter(await getHighlighter({ themes, langs })),
        new ColistConverter(),
    ]);

    metadata = generatePageMetadata(post);

    return (
        <div className="post">
            <header>
                <h1 className="post__title">{post.title}</h1>
                {post.subtitle && (
                    <h2 className="post__subtitle">{post.subtitle}</h2>
                )}
            </header>

            <aside className="post__metadata">
                <span>{post.date.format("MMM Do, YYYY")}</span>
            </aside>

            <main
                className="post__content"
                dangerouslySetInnerHTML={{ __html: post.content }}
            />
        </div>
    );
}
