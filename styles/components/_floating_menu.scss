@use 'sass:map';
@use '../abstract' as *;
@use './button';

.floating-menu {
  $floating-menu: &;

  position: fixed;
  bottom: 4rem;
  right: 4rem;
  z-index: 100;

  @include responsive(landscape) {
    --background-color: #{map.get($colors, "neutral", "darkest")};
    --text-color: #{map.get($colors, "neutral", "light")};

    // transition: transform 250ms cubic-bezier(.68,-0.55,.27,1.55);
    // transform: scale(1);
    transition: opacity 250ms;
    opacity: 1;


    &.hide {
      // transform: scale(0);
      opacity: 0;
    }
  }

  @include responsive(phone) {
    right: 2rem;
    bottom: 3rem;
  }

  &:hover::before {
    opacity: 1;
    // background-color: var(--background-color);
  }

  &::before {
    @extend %no-content;
    @extend %position-absolute;
    display: none;
    width: 100%;
    height: 100%;
    background-color: var(--background-color);
    opacity: 1;
    border-radius: 100vw;
    z-index: -1;

    @include responsive(landscape) {
      display: block;
    }
  }

  &__menu {
    @include flex(column);

    @include responsive(landscape) {
      #{$floating-menu}.hide & {
        pointer-events: none;
      }
    }
  }

  &__item {
    @extend %no-overflow;
    @include size(5rem);
    text-align: center;
    border-radius: 50%;
    
    /* Explicitly select direct child to not interfere with search box */
    // &:hover svg,
    // &:hover a {
    //   fill: var(--accent-color);
    //   color: var(--accent-color);
    // }

    // a, svg {
    //   fill: var(--text-color);
    //   color: var(--text-color);
    // }

    // a, label {
    //   @extend %button;
    //   @extend %display-as-inline-block;
    //   background: none;
    // }

    // a {
    //   @include size(5rem);
    //   font-size: 3rem;
    // }

    input {
      
      /* Hide the checkbox and rotate the labels to show a different icon */
      &[type="checkbox"] {
        display: none;

        &:checked ~ label {
          transform: rotate(180deg);  
        }

        /* TODO: Find a better placement for the search modal component */
        &:checked ~ form,
        &:checked ~ ul {
          display: block;
        }
      }
    }
    
    label {

      // Labels with a for attribute
      &[for] { 
        @include size(5rem, 10rem);
        @include flex(column);
        transition: transform .3s;
        // font-size: 3rem; // leave as reference for extension
      }
    }
    
  }

  &__button {
    @extend %display-as-inline-block;
    @extend %button;
    @include size(5rem);
    fill: var(--text-color);
    color: var(--text-color);
    background: none;
    font-size: 3rem;

    &:focus,
    &:hover {
      color: var(--accent-color);

      svg {
        fill: var(--accent-color);
      }
    }

    svg {
      @include size(5rem);
      transform: scale(0.5);
    }
  }
}
